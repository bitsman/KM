#+MACRO: version 2.0
#+MACRO: updated last updated 4 March 2014
#+title: 工具
#+author: 比克曼
#+subauthor: 第二作者 
#+email: bitman@163.com
#+latex_class: org-latex-pdf 
#+latex: \newpage 
#+toc: tables 
#+latex: \clearpage\pagenumbering{arabic} 
#+options: h:4 
#+startup: overview
#+startup: hideblocks
#+startup: align
#+startup: logdone
#+options: ':t email:t author:t 
#+toc: tables
#+latex_header: \setcounter{tocdepth}{5}
#+latex_header: \setcounter{secnumdepth}{5}

#+keywords: emacs keil iar
#+creator: creator-bitsman 
#+DESCRIPTION: description-bitsman
#+SUBTITLE: 这里会做一些emacs测试

* emacs
** 安装
- gnuserv安装：将emacs目录拷贝后，在系统环境变量中增加HOME键值等于emacs路径
  (d:\emacs)，即可； 
- 自动安装插件：M-x package-list-packages获取插件包列表，enter进入选中插件，
  点击install开始安装；
- 重新加载配置文件(pymacs)：M-x load-library RET pymacs RET
- emacs配置即时生效: 不重启Emacs让新修改的配置内容生效
  + M-x eval-last-sexp 使当前 elisp 配置中光标前的那一条语句立刻生效；
  + M-x eval-region 使当前 elisp 配置中选中的 region 中的语句立刻生效；
  + M-x eval-buffer 使当前的 buffer 中的设置语句立刻生效；
  + M-x load-file ~/.emacs 载入 .emacs 文件，从而使其中的设置生效，要
    生效其它 elisp 文件只需要把 .emacs 文件名换成其它的即可。  
** 基本操作
*** 按键命令
- 按键自定义方式
  1. 定义全局按键
     #+begin_src lisp
     (global-set-key "\M-;" 'qiang-comment-dwim-line)
     #+end_src
  2. 定义模式相关的快捷键：如下定义一个快捷键，只有在org-mode中起作用
     #+begin_src lisp
     (define-key org-mode-map (kbd "C-S-a") 'org-archive-subtree)
     #+end_src
  3. 同一个按键适用于多个模式：表示只在text-mode和org-mode里打开flyspell的功能，并且绑定了C-c C-v按键，这里用到了 dolist
     函数来遍历需要设置的mode      
     #+begin_src lisp
     (dolist (hook '(text-mode-hook org-mode-hook))
              (add-hook hook
                    (lambda ()
                        (flyspell-mode 1)
                        (local-set-key (kbd "C-c C-v") flyspell-goto-next-error))))
     #+end_src
  4. 使用local-set-key做局部绑定，暂定；
- 定义自己的M-x指令：如下指令进行M-x gtd，可以打开相应的文件；
  #+begin_src lisp
   (defun gtd ()
    (interactive)
    (find-file "c:/homes/charles/gtd/gtd/mygtd.org"))
  #+end_src
- 表格\ref{tbl-emacs-inf}总结了平时需要的快捷键、模式、命令等操作；
  #+caption: emacs使用汇总
  #+label: tbl-emacs-inf
  #+attr_latex: placement=[H] :environment longtable
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  | 模式     | 按键      | 函数                           | 功能                             | 备注               |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-c a     | org-agenda                     | 进入org模式的agenda              |                    |
  |          | C-c b     | org-iswitchb                   | 进入org模式的iswitchb            |                    |
  |          | C-c c     | org-capture                    | 进入org模式的capture             |                    |
  |          | C-c l     | org-store-link                 | 进入org模式的org-store-link      |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | F9        | emacs-maximize                 | 窗口最大化                       | 实际上延时后最大化 |
  |          | C-F9      | emacs-normal                   | 窗口大小还原                     |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-x 4 4   | split-window-h2v2              | 窗口分成4份，水平2份垂直2份      |                    |
  |          | C-x 4 3   | split-window-h2v1              | 窗口分成3份，水平2份垂直1份      |                    |
  |          | C-x 4 5   | split-window-h1v2              | 窗口分成3份，水平1份垂直2份      |                    |
  |          | M-j       | split-window-rotate            | 窗口顺时针旋转                   |                    |
  |          | M-S-j     | split-window-hv-turn           | 窗口逆时针旋转                   |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | M-g       | goto-line                      | 跳转到某行                       |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-,       | scroll-left                    | 屏幕左移命令                     |                    |
  |          | C-.       | scroll-right                   | 屏幕右移命令                     |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | F3        | repeat-complex-command         | 重复上一命令                     |                    |
  |          | C-x z     |                                |                                  |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | F8        | eshell                         | 打开eshell                       |                    |
  |          | C-F8      | open-eshell-other-buffer       | 在另一个buffer里面打开eshell     |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-;       | set-mark-command               | 设置标记起始位置                 | 原来绑定在C-SPC上  |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | F2        | ecb-hide-ecb-windows           | ecb模式窗口隐藏                  |                    |
  |          | C-F2      | ecb-show-ecb-windows           | ecb模式窗口显示                  |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | M-;       | user-comment-dwim-line         | 代码注释                         |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | F7        | quick-compile                  | 编译                             | 设置编译C          |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | F10       | my-transparent                 | 设置或者取消emacs透明            |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-c 1     | org-time-stamp                 | org模式时间戳                    |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-c d     | insert-current-date            | 插入当前日期                     |                    |
  |          | C-c t     | insert-current-time            | 插入当前时间                     |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-F1      | manual-entry                   | 进入manual                       |                    |
  |          | F1        | open-key-info-file             | 进入自定义快捷键帮助             |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          |           | byte-compile-file              | 编译elisp文件                    |                    |
  |          |           | describe-current-coding-system | 显示当前buffer的编码格式         |                    |
  |          | C-x RET f |                                | 改变当前buffer的编码格式         |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          | C-x {     |                                | 往左加宽buffer尺寸               |                    |
  |          | C-x }     |                                | 往右加宽buffer尺寸               |                    |
  |          | C-x ^     |                                | 往上加高buffer尺寸               |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  | 目录模式 | n         |                                | 向下查看文件                     |                    |
  | C-x d    | p         |                                | 向上查看文件                     |                    |
  |          | >         |                                | 向下查看目录                     |                    |
  |          | <         |                                | 向上查看目录                     |                    |
  |          | ^         |                                | 返回上一级目录                   |                    |
  |          | M-(       |                                | 向下查看已标记                   |                    |
  |          | M-)       |                                | 向上查看已标记                   |                    |
  |          | g         |                                | 刷新                             |                    |
  |          | s         |                                | 切换名称/日期排序方式            |                    |
  |          | i         |                                | 当前窗口下面打开该子目录         |                    |
  |          | v         |                                | 查看当前文件（当前窗口）         |                    |
  |          | o         |                                | 查看当前文件（另一窗口）         |                    |
  |          | y         |                                | 查看当前文件类型                 |                    |
  |          | 等号      |                                | 比较文件，相当于shell下的diff    |                    |
  |          | m         |                                | 标记（mark）                     |                    |
  |          | u         |                                | 取消标记                         |                    |
  |          | U         |                                | 取消所有标记                     |                    |
  |          | * /       |                                | 标记所有文件夹                   |                    |
  |          | * *       |                                | 标记所有可执行文件               |                    |
  |          | * @       |                                | 标记所有符号链接                 |                    |
  |          | * c       |                                | 改变标记的符号                   |                    |
  |          | % m       |                                | 根据正则表达式改变标记文件       |                    |
  |          | % g       |                                | 根据正则表达式改变标记文件的内容 |                    |
  |          | d         |                                | 标记为删除                       |                    |
  |          | ~         |                                | 标记所有备份文件为删除           |                    |
  |          | #         |                                | 将存盘文件标记为删除             |                    |
  |          | & d       |                                | 根据正则表达式标记删除           |                    |
  |          | X         |                                | 执行标记的操作                   |                    |
  |          | +         |                                | 新建目录                         |                    |
  |          | C-x C-q   |                                | 将文件列表设置为只读             |                    |
  |          | D         |                                | 删除文件                         | 标记（m）后的操作  |
  |          | C         |                                | 拷贝                             | 标记（m）后的操作  |
  |          | O         |                                | 改变用户                         | 标记（m）后的操作  |
  |          | G         |                                | 改变群组                         | 标记（m）后的操作  |
  |          | S         |                                | 符号链接                         | 标记（m）后的操作  |
  |          | H         |                                | 硬链接                           | 标记（m）后的操作  |
  |          | Z         |                                | 压缩                             | 标记（m）后的操作  |
  |          | W         |                                | 复制文件名                       | 标记（m）后的操作  |
  |          | K         |                                | 删除行，刷新后可恢复             | 标记（m）后的操作  |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
  |          |           | revert-buffer                  | 刷新buffer                       |                    |
  |          |           | emacs -q                       | 进入emacs默认最小配置            | 启动emacs时使用    |
  |          |           | eval-current-buffer            | 当前配置立马生效                 |                    |
  |          |           | rename-buffer                  | 重命名当前buffer                 |                    |
  |----------+-----------+--------------------------------+----------------------------------+--------------------|
*** 其他
- 在eshell中使用$PATH$可以输出当前emacs的路径path；
- 查询当前模式:C-h m或者M-x describe-mode ;
- el源文件编译:对于emacs某些包，有生成的elc的编译文件，emacs启动时，调用elc启动速度会更快，但是如果修改了源文件el，则可
  以使用M-x：byte-recompile-directory来重新编译，才能将修改的地方起作用。比如org mode中修改latex的生成模式函数
  org-export-latex-make-header
- 右键菜单配置打开命令：在注册表\HKEY\_CLASSES\_ROOT\AllFilesystemObjects\shell\下面新建一项Emacs，再在下面新建command项，
  看起来应该是这样：\HKEY\_CLASSES\_ROOT\AllFilesystemObjects\shell\Emacs\command\ 然后把command项右边的默认值设为
  Path\gnuclientw.exe，并加上"%1"
- emacs配置立马生效: 可以M-x eval-current-buffer立马生效;
- 查看emacs占用资源：M-x profiler-start 然后选cpu+mem然后执行
  profiler-report；
*** 计算器
- 计算器模式1：M-x calc进入，输入"10"回车"d2，这个d2会把窗口中的所有数字显示为二进制形式，所有的数字都会以"2#"开头,以表
  示它们是二进制形式。如果要重新用十进制显示，则输入"d0"即可，同样，也可以用"d8""，"d6"来显示八进制和十六进制的格式。如
  果要进行进制转换，比如讲二进制的1010转换为十六进制，可以这样先d6设定16进制模式，然后再minibuffer中输入2#1010，回车；
- 计算器模式2：M-x quick-calc进入，启动后会在minibuffer里提示输入数学计算式，回车就显示结果；
*** 图片
- 导入图片见图\ref{img-pic-test}:可以通过调节width=.1\ linewidth来限制图片输出的大小, 其中.1表示倍率，或者使用scale=0.2
  进行调节
  #+caption: emacs导图测试 
  #+label: img-pic-test
  #+attr_latex: placement=[H] scale=0.2
  [[./img/emacs1.jpg]]
*** 字体
- eshell 查看系统字体:eshell:fc-list(或者fc-list.exe) (空格) :lang=zh-cn
*** 编码
- 设置编码格式:使用快捷键：C-x RET f 然后可以用 TAB 显示所有存在的编码。这个命令会改变文件！如果只是出现乱码，并且不想改
  变文件本身，可以用命令C-x RET r ( M-x revert-buffer-with-coding-system)来用指定的编码重新读入这个文件。不改变当前文件
  编码，但将该文件另存为utf-8编码格式：C-x RET c(M-x universal-coding-system-argument ) utf-8
- 对于org-mode导出HTML时，如果org-mode是gbk/utf-8，则导出的HTML也是gbk/utf-8；
*** 外部程序
使用M-x shell-command然后输入win下程序，可以调用执行之。也可以绑定到
按键上。 
** elisp
*** 函数
- concat：将字符串连接，如下
  #+begin_src lisp
  (concat "gcc" "-W -o")
  #+end_src
- file-name-sans-extension: 获得文件名，除了后缀名；
- buffer-file-name: 获得文件名，带后缀名；
- current-buffer: 当前buffer名；
*** 功能
- 获取buffer文件名: 行[[(extn)]]带有后缀名，行[[(noextn)]]不带后缀名；
  #+begin_src lisp -n -r
  (buffer-file-name (current-buffer)) (ref:extn)
  (file-name-sans-extension (buffer-file-name (current-buffer))) (ref:noextn)
  #+end_src
** org-mode
# <<org-mode>>
org-mode在线[[http://orgmode.org/org.html][帮助文档]]。
*** 可视化
- 初始可视化：在org文档的开始，加上#+startup: overview, 其中overview可以是
  如下选项
  1. overview：只显示第一级标题；
  2. content：显示所有标题；
  3. showall：显示所有标题和正文；
  4. showeverything：显示所有标题和正文, 雷同showall；
*** 抽屉
使用抽屉drawer，在导出时，drawer里面的文字不会被到导出, 可以在里面放入一些
注解, 可以使用命令'org-insert-property-drawer' 
:PROPERTIES:
抽屉内部
:END:
*** 块
代码块可以设置#+startup: hideblocks, 做初始化折叠或打开。可以有如下选项
1. hideblocks：隐藏代码块；
2. nohideblocks：显示代码块；
*** 脚注
脚注注解可以放在任何正文位置，脚注形式有；
- 脚注一, 普通序号脚注[fn:1];
- 脚注二，带名字脚注[fn:second];
- 脚注三, 匿名脚注[fn:: 匿名脚注]; 
- 脚注四，带描述的脚注[fn:four: 带描述的脚注]; 
[fn:1] 普通序号脚注
[fn:second] 带名字脚注
*** 序号
- 无序号：无序号符号可以是'-'和'+'和'*'；
- 有序号：可以是'1.'和'1)';
- 描述 :: 对序号的描述；
*** 字体
试试 *粗体* ，试试 /斜体/ ,  试试删除线  +删除线+ ，试试 _下划线_, 试试下标 H_{2}O 试试上标 E=mc^2 ，等宽字体 =git=, ~code~
*** 公式
1. 公式：在本行，$a^2+b^2=c^2$
2. 公式：在本行，\(a^2 + b^2 = c^2\)
3. 公式：单独成行。$$a^2 + b^2 = c^2$$
4. 公式：单独成行。\[a^2 + b^2 = c^2\]
5. 公式：在本行，\(\sqrt{2}\)
6. 和公式：$$a=\sum_{i=0}^{n}a_{i}$$
7. 分数公式：$$\frac{x}{y}$$
8. 输入equ，然后按tab也可以进入begin end模式，编辑公式，可以有标号，可以设
   置label标签引用。
*** 表格
**** 内建表格 
- 固定列宽：可以在某列中写入<n>，n表示n个英文字符宽度，超出宽度的字符将隐
  藏，并且以'=>'结尾, 使用鼠标将光标移到'=>'上，emacs将弹出小窗口显示内容，
  如果要编辑，可以使用C-c ', 可以在文件头使用#+startup: align来显示与否
  1. align: 隐藏多余的字符；
  2. noalign：显示多余的字符；
- 表格对齐
  1. '<r>': 表格右对齐；
  2. '<c>': 表格左对齐；
  3. '<l>': 表格左对齐；
- 表格合并：在一空行中，首列使用'/', 将需要合并的列用'<>'括起来，则导出的文
  档中合并了的列，将会有垂直线显示；
**** 表格插件
可以使用table-mode，命令table-insert可以插入一个n行n列的表格，
table-span-cell可以合并单元格。 
**** 表格第三方
可以将内建表格用在其他mode中,只需要配置.
#+begin_src lisp
(add-hook 'message-mode-hook 'turn-on-orgtbl)
#+end_src
**** 表格计算
- 行表示：第2行：@2;
- 列表示：第2列：$2;
- 表格表示：第2行第2列：@2$2, 或者B2;
- 打开表格符号帮助：C-c ?;
- 显示行列帮助：C-c };
- 公式引用：在表格下方的计算公式上使用C-c C-c，或者在表格中使用C-u C-c *;
- 表格中输入计算公式：在表格中使用=表示列计算方式，使用:=表格单个表格计算公式；
- 在mini buffer中输入公式：列计算模式C-c =，表格计算模式C-u C-c = ;
- 在单独的buffer中输入公式：C-c ';
- 求平均值函数vmean:例如:=vmean($2..$3)；
*** 画图
- ditaa测试：如果要支持中文，org文档需为utf-8的格式，这是java调用ditaa.jar
  时的默认格式, 效果如图\ref{img-test}所示 
  #+caption: 测试画图
  #+label: img-test
  #+attr_latex: placement=[H] scale=0.3
  #+begin_src ditaa :file ./img/img-zhongwen.png :cmdline -r -o
  +----------------+     +--------------+    /-----------\
  |  cBLU blue     |     |  cRED        |    |  cGRE     |
  |                |---> |  red         |--->|  green    |-------+
  +----------------+     +--------------+    \-----------/       |
                                                                 |
                            +------------------+  <--------------+
                            |    cBLU          |                 :
                            |    o item1       |                 |
                            |    o item2       |                 v
                            |    o item3       |   +--------------+
                            +------------------+   |   cRED       |
                                                   +--------------+
  #+end_src
- gnuplot，见图\ref{img-gnuplot-test}所示：
  #+caption: 测试图
  #+label: img-gnuplot-test
  #+attr_latex: placement=[H] scale=0.5
  #+begin_src gnuplot :exports results :file ./img/img-gnuplot-test.png
  reset
  set title "Putting it All Together"
  set xlabel "X"
  set xrange [-8:8]
  set xtics -8,2,8
  set ylabel "Y"
  set yrange [-20:70]
  set ytics -20,10,70
  f(x) = x**2
  g(x) = x**3
  h(x) = 10*sqrt(abs(x))
  plot f(x) w lp lw 1, g(x) w p lw 2, h(x) w l lw 3
  #+end_src
  引用表格画图：表格见表\ref{tbl-data-plot}所示。
  #+label: tbl-data-plot
  #+plot: title: "example table" ind: 1 type: 2d with: lines
  #+tblname: data-plot
  | independent var | first dependent var | second dependent var |
  |-----------------+---------------------+----------------------|
  |             0.1 |               0.425 |                0.375 |
  |             0.2 |              0.3125 |               0.3375 |
  |             0.3 |          0.24999993 |           0.28333338 |
  |             0.4 |               0.275 |              0.28125 |
  |             0.5 |                0.26 |                 0.27 |
  |             0.6 |          0.25833338 |           0.24999993 |
  |             0.7 |          0.24642845 |           0.23928553 |
  |             0.8 |             0.23125 |               0.2375 |
  |             0.9 |          0.23333323 |            0.2333332 |
  |               1 |              0.2225 |                 0.22 |
  |             1.1 |          0.20909075 |           0.22272708 |
  |             1.2 |          0.19999998 |           0.21458333 |
  |             1.3 |          0.19615368 |           0.21730748 |
  |             1.4 |          0.18571433 |           0.21071435 |
  |             1.5 |          0.19000008 |            0.2150001 |
  |             1.6 |           0.1828125 |            0.2046875 |
  |             1.7 |          0.18088253 |            0.1985296 |
  |             1.8 |          0.17916675 |           0.18888898 |
  |             1.9 |          0.19342103 |           0.21315783 |
  |               2 |                0.19 |              0.21625 |
  |             2.1 |          0.18214268 |           0.20714265 |
  |             2.2 |          0.17727275 |            0.2022727 |
  |             2.3 |           0.1739131 |            0.1989131 |
  |             2.4 |          0.16770833 |            0.1916667 |
  |             2.5 |               0.164 |                0.188 |
  |             2.6 |          0.15769238 |           0.18076923 |
  |             2.7 |           0.1592591 |            0.1888887 |
  |             2.8 |           0.1598214 |           0.18928565 |
  |             2.9 |          0.15603453 |            0.1844828 |
  |-----------------+---------------------+----------------------|
  
  #+begin_src gnuplot :var data=data-plot :exports results :file ./img/data-plot.png
    reset
    set title "example table"
    set xlabel "X" 
    set ylabel "Y"
    plot data u 1:2 w l lw 1 title 'first dependent var', \
         data u 1:3 w l lw 1 title 'second dependent var'
    
  #+end_src
*** 链接
- 链接之间跳转：C-c C-x n和C-c C-x p
- 内部链接：只需要在某个需要链接到的地方使用# <<target>>，设置一个标点，再
  在使用的地方，使用像[[][]]这样的格式去定位标点，并给出描述符，或者直接使
  用快捷键C-c C-l添加该点，比如已经在org-mode标题处设置了标点，然后使用
  [[][]]定位过去就是 [[org-mode]], 并且可以使用C-c &返回来, 使用C-c C-o可以打开
  标点。
- 辐射链接：使用3个尖括号括起的锚点，可以将文档中所有的锚点链接起来，比如
  <<<buffer>>> ;
- 外部链接：包括链接到文件、网址、email等
- 包含：可以在头部使用#+include:"path/file"包含某个文件，比如org，然后就可
  以将所有的org文件包含到一个文件里面统一导出；后面添加一定的开关可以导入特
  定的数据，比如添加 _src c_ ，可以导入c代码；使用 _lines_ 关键字可以导入文
  件的某几行
*** gtd
gtd状态之间转换可以使用快捷键C-c C-t;  
- 工作流状态: 对于一个工作流可以使用 _sequence_ 的工作流设置状态如, 其中竖
  线用于分割，一边是用于需要动作的，一边只是记录不需要动作。颜色也有不同，
  如果没有竖线，最后一个状态将代表DONE状态
  #+begin_src emacs-lisp
  (setq org-todo-keywords '((sequence "TODO" "VERIFY" "|" "DONE")))
  #+end_src
- 工作类型: 使用 _type_ 设置工作类型如
  #+begin_src emacs-lisp
  (setq org-todo-keywords '((type "Fred" "Sara" "Lucy" "|" "DONE")))
  #+end_src
- 文件个性化状态：针对每个org文件设置状态切换关键字，在org头设置如下, 行
  (all-todo)可以定义两种关键字，行(seq-todo)可以定义工作流状态，行
  (type-todo)可以定义工作类型。
  #+begin_src emacs-lisp -n -r
  #+TODO: TODO FEEDBACK VERIFY | DONE CANCELED (ref: all-todo)
  #+SEQ_TODO: TODO FEEDBACK VERIFY | DONE CANCELED (ref: seq-todo)
  #+TYP_TODO: Fred Sara Lucy Mike | DONE            (ref: type-todo)
  #+end_src
- 状态样式：各种状态可以设置不同的颜色，字体等如
  #+begin_src emacs-lisp
  (setq org-todo-keyword-faces
        '(("TODO" . org-warning) ("STARTED" . "yellow")
         ("CANCELED" . (:foreground "blue" :weight bold))))
  #+end_src
*** 换行
一般使用一个空行表示换行，也可以使用latex的斜杠par，如果需要在某个行强行折
行，可以使用两个斜杠。如果想写类似诗句一样的格式可以使用如下方式
#+BEGIN_VERSE
Great clouds overhead
Tiny black birds rise and fall
Snow covers Emacs
   
         -- AlexSchroeder
#+END_VERSE
*** babel
1. verse: 见换行一节的用法
2. quote：如果从别的文章中引用一段话，通常需要将这些语句左右都流出一定空间，
   如下面所示
   #+begin_quote
   Everything should be made as simple as possible,
   but not any simpler -- Albert Einstein
   #+end_quote
3. center: 如果需要将某些文字中心对齐，可以使用如下方式
   #+BEGIN_CENTER
   Everything should be made as simple as possible, \\
   but not any simpler
   #+END_CENTER
4. example: 里面的文字不会被解析，原样导出
   #+begin_example
   Some example from a text_file.
   #+end_example
   也可以在首行使用冒号加一个空格后面添加文字作为一个简化方式，如
   : Some example from a text_file.
5. src: 可以放入一些代码, 使用-n或者+n会对代码标记行号, 其中-n会使代码行号
   重新计数，+n从上一个代码片段累计计数，使用-r表示可以引用行号，只需要在某
   行末尾使用（ref：name），在引用的地方使用C-c C-l 输入连接（name）就可引
   用了。使用-i可以对某些代码做合理缩进 
   #+BEGIN_SRC emacs-lisp -n -r
     (save-excursion                  (ref:sc)
        (goto-char (point-min)))      (ref:jump)
   #+END_SRC
   In line [[(sc)]] we remember the current position. Line [[(jump)][(jump)]]
   jumps to point-min.
*** 宏
可以在org中定义宏，类似c的宏，然后可以在段落、标题、引用块、表格、列表中使
用。系统内建的宏有
1. title：org文档的标题；
2. author：org文档的作者；
3. email：邮件地址；
4. date：日期戳，还可以定义时间戳的格式，参考[[http://orgmode.org/org.html#Macro-replacement][宏帮助文档]]；
5. time: 时间戳，同date；
6. modification-time：date和time的叠加；
7. input-file：This macro refers to the filename of the exported file；
8. property：属性，暂未知；
9. select\_tags: 如果在节标题中做了tag标注，可以使用这个来选择性的导出某些
   节。
10. exclude\_tags: 和select\_tags相反；
*** 注释
可以使用快捷键C-c ; 将某个小节注释掉，导出时不会出现在导出文档中。
‘#+BEGIN\_COMMENT’ ... ‘#+END\_COMMENT’好像不起作用； 
*** 导出
- org-mode转换到pdf需要在org-mode文件中头部使用如下头;
  #+begin_src emacs-lisp
    #+ title: 我的记事本
    #+ author: lxc
    #+ latex_class: org-latex-pdf
    #+ latex: \newpage
  #+end_src
- 中文首行缩进2格：可以在上一自然段末尾使用斜线加par或者在两个自然段直接空两行。
- 换最新版本orgmode，可以将标题首页和目录分开；
- 由于org文档转换为latex文本时，中间需要软件iconv将之转换为utf-8格式，而org
  源文档是gbk格式，所以如果将org文档由gbk格式转换为了别的格式，比如utf-8，
  则需要修改iconv的转换命令，详细见org个配置文档“my-org-mode.el” 
- 如果需要修改org文档中嵌入的代码宽度高度，可以修改"my-org-mode.el"中的如下
  代码"页边距"
  #+begin_src emacs-lisp
	\lstset{numbers=left, %设置行号位置
          numberstyle=\\tiny, %设置行号大小
	 		keywordstyle=\\color{blue}, %设置关键字颜色
	 		commentstyle=\\color[cmyk]{1,0,1,0}, %设置注释颜色
	        frame=single, %设置边框格式
	        escapeinside=``, %逃逸字符(1左面的键)，用于显示中文
	        breaklines, %自动折行
	        extendedchars=false, %解决代码跨页时,章节标题，页眉汉字不显示
	        xleftmargin=10em,xrightmargin=5em, aboveskip=0.5em, %设置页边距
	        tabsize=4, %设置tab空格数
	        showspaces=false} %不显示空格
  #+end_src
- 大纲级别:若需导出更深入的大纲级别,可设置 _org-export-headline-levels_
  或者在文件头使用
  #+begin_src emacs-lisp
  #+options: h:4
  #+end_src
- 目录：
  1. 可以设置目录的生成级别或者不导出目录，可设置 _org-export-with-toc_
     或者在每个文件中使用
     #+begin_src emacs-lisp
     #+OPTIONS: toc:2          only inlcude two levels in TOC
     #+OPTIONS: toc:nil        no default TOC at all
     #+end_src
  2. 可以设置目录导出成list或者table
     #+begin_src emacs-lisp
     #+TOC: listings           build a list of images
     #+TOC: tables             build a list of tables
     #+end_src
**** 配置
可以使用 _\#+opinion_ 等关键字对文档导出做配置，也可以将这些配置写入某个 _filename_
文件中，然后在头使用 _\#+setupfile: filename_ 加载这些配置。
- 关键字：见宏，或见表\ref{tbl-key-words}所示；
  #+caption: 配置关键字
  #+label: tbl-key-words
  #+attr_latex: placement=[H]
  |--------------------------+---------------------------------------------------------------------------|
  | 项                       | 说明                                                                      |
  |--------------------------+---------------------------------------------------------------------------|
  |--------------------------+---------------------------------------------------------------------------|
  | #+TITLE:                 | the title to be shown (default is the buffer name)                        |
  | #+AUTHOR:                | the author (default taken from user-full-name)                            |
  | #+DATE:                  | a date, an Org timestamp119, or a format string for format-time-string    |
  | #+EMAIL:                 | his/her email address (default from user-mail-address)                    |
  | #+DESCRIPTION:           | 某些pdf软件可以查看pdf的属性，属性包括文章描述                            |
  | #+KEYWORDS:              | 某些pdf软件可以查看pdf的属性，属性包括文章关键字                          |
  | #+LANGUAGE:              | language for HTML, e.g. ‘en’ (org-export-default-language)              |
  | #+TEXT:                  | Some descriptive text to be inserted at the beginning.                    |
  | #+TEXT:                  | Several lines may be given.                                               |
  | #+OPTIONS:               | H:2 num:t toc:t \backslash{}n:nil @:t ::t     \vert{}:t ^:t f:t TeX:t ... |
  |--------------------------+---------------------------------------------------------------------------|
  | #+BIND:                  | lisp-var lisp-val, e.g.: org-export-latex-low-levels itemize              |
  |                          | You need to confirm using these, or configure org-export-allow-BIND       |
  |--------------------------+---------------------------------------------------------------------------|
  | #+LINK\_UP:              | the ``up'' link of an exported page                                       |
  | #+LINK\_HOME:            | the ``home'' link of an exported page                                     |
  | #+LATEX\_HEADER:         | extra line(s) for the LaTeX header, like \usepackage{xyz}                 |
  | #+EXPORT\_SELECT\_TAGS:  | Tags that select a tree for export                                        |
  | #+EXPORT\_EXCLUDE\_TAGS: | Tags that exclude a tree from export                                      |
  | #+XSLT:                  | the XSLT stylesheet used by DocBook exporter to generate FO file          |
  |--------------------------+---------------------------------------------------------------------------|
- options: 带一定的[[http://orgmode.org/org.html#Export-settings][参数]] 可以配置不同的导出形式, 见表\ref{tbl-option-para},
  比如后面跟 _email:nil_ 表示导出的文档不带email地址， _email:t_ 表示带地址。
  #+caption: option项的参数说明
  #+label: tbl-option-para
  #+attr_latex: placement=[H]
  |-------------+-------------------------------------------------------------------|
  | 项          | 说明                                                              |
  |-------------+-------------------------------------------------------------------|
  |-------------+-------------------------------------------------------------------|
  | H:          | set the number of headline levels for export                      |
  | num:        | turn on/off section-numbers                                       |
  | toc:        | turn on/off table of contents, or set level limit (integer)       |
  | \n:         | turn on/off line-break-preservation (DOES NOT WORK)               |
  | @:          | turn on/off quoted HTML tags                                      |
  | ::          | turn on/off fixed-width sections                                  |
  | \vert{} :   | turn on/off tables                                                |
  |-------------+-------------------------------------------------------------------|
  | \land{}:    | turn on/off TeX-like syntax for sub- and superscripts.  If        |
  |             | you write "^:{}", a_{b} will be interpreted, but                  |
  |             | the simple a_b will be left as it is.                             |
  |-------------+-------------------------------------------------------------------|
  | \mathrm{-}: | turn on/off conversion of special strings.                        |
  | f:          | turn on/off footnotes like this[1].                               |
  | todo:       | turn on/off inclusion of TODO keywords into exported text         |
  |-------------+-------------------------------------------------------------------|
  | tasks:      | turn on/off inclusion of tasks (TODO items), can be nil to remove |
  |             | all tasks, todo to remove DONE tasks, or list of kwds to keep     |
  |-------------+-------------------------------------------------------------------|
  | pri:        | turn on/off priority cookies                                      |
  | tags:       | turn on/off inclusion of tags, may also be not-in-toc             |
  | <:          | turn on/off inclusion of any time/date stamps like DEADLINES      |
  | *:          | turn on/off emphasized text (bold, italic, underlined)            |
  | TeX:        | turn on/off simple TeX macros in plain text                       |
  | LaTeX:      | configure export of LaTeX fragments.  Default auto                |
  | skip:       | turn on/off skipping the text before the first heading            |
  | author:     | turn on/off inclusion of author name/email into exported file     |
  | email:      | turn on/off inclusion of author email into exported file          |
  | creator     | turn on/off inclusion of creator info into exported file          |
  | timestamp:  | turn on/off inclusion creation time into exported file            |
  | d:          | turn on/off inclusion of drawers                                  |
  |-------------+-------------------------------------------------------------------|
- 标题级数：使用如下配置可以设置标题显示级数，使用option的h参数不够。
  #+begin_src lisp
  #+latex_header: \setcounter{tocdepth}{5}
  #+latex_header: \setcounter{secnumdepth}{5}
  #+end_src

**** beamer
不用#+latex_class也可以导出幻灯片，见[[http://orgmode.org/org.html#A-Beamer-Example][代码]]。
**** pdf
可以设置一些导出配置选项
- DESCRIPTION：文档的描述；
- LATEX\_CLASS：预定义的一些latex配置；
- LATEX\_CLASS\_OPTIONS: 配置选项；
- LATEX\_HEADER: 添加一些latex包；
- LATEX\_HEADER\_EXTRA: 添加的一些其他配置；
- KEYWORDS：文档关键字；
- SUBTITLE：文档小标题；
- 装了完整版ctex，用org-mode导出是可能还是会有错误，多半是缺乏字体引起。
**** html
**** 特殊符号
- 表格里面的竖线: latex命令\vert{}; 
- 表格里面的横线：latex命令\mathrm{-};
- 表格里面的上尖括号：latex命令\land{}；
- 表格里面的左尖括号：latex命令\textless{};
- 表格里面的右尖括号：latex命令\textgreater{}; 
*** latex
可以使用cdlatex完成输入latex的各种模块。使用快捷键C-c {可以输入equation等的
模块。
*** capture
除了官方教程，这里有一篇不错的[[https://www.zmonster.me/2018/02/28/org-mode-capture.html#org1a3d856][应用笔记]]。

** python-mode
- 进入交互python模式：进入某个buffer，M-x python-mode，然后C-c C-z即可进入交互模式，也可以在buffer里面写好程序，在C-c
  C-z直接运行buffer的代码；
** dired-mode
- 压缩文件：使用m标记待压缩的文件，按！进入minishell，输命令zip
  test.zip * 就可以完成压缩，
  回车就压缩到test.zip里面了。其他如7z类似；
- 正则标记：使用快捷键 %+m；
** git
使用了git-emacs的插件，将命令M-x git-status绑定在了F1键上。
*** 配置
- 使用M-x git-config-init 配置用户名和email；
- 如果github使用https方式，则在环境变量中设置HOME变量，值是某目录；
- 在该目录下新建文件_netrc；
- 在_netrc中写入
  #+begin_src c
    machine github.com
    login bitman@163.com
    password github的登录密码
  #+end_src
- 进入eshell使用命令设置远端仓库的别名；
  #+begin_src c
  git remote add learn https://github.com/bitsman/bitsman.github.io.git 
  #+end_src
- 然后就可以使用git bash进行免输入密码push；
*** push
1. 进入git仓库，或者打开仓库里面的文件；
2. 按F1；
3. 使用p/n等进行上下移动，选中修改过的文件使用a键添加进仓库；
4. 使用c键进行commit；
5. 在跳出的buffer中写入日志；
6. 使用C-c C-c进行commit；
7. 使用点.键调出git bash，输入push learn master推送到远端；
* latex
** 方法
# - 固定latex插入的图片位置
#   #+begin_src latex
#     \subsubsection{\kai{metis的数据流图}}
#     \begin{figure}[H]%注意是大写的H哦
#         \centering
#         \includegraphics[width=1.2\textwidth]{eps/metis_dataflow.eps}
#         \caption{metis dataflow}
#         \label{metis_dataflaw}
#     \end{figure}
#   #+end_src
** 符号
*** 数学模式重音符号
[[./img/shuxuemoshizhongyinfu.jpg]]
*** 小写希腊字母
[[./img/xiaoxiexilazimu.jpg]]
*** 大写希腊字母
[[./img/daxiexilazimu.jpg]]
*** 二元关系符
可以在前面加上\ not来得到其否定形式。
[[./img/eryuanguanxifu.jpg]]
*** 二元运算符
[[./img/eryuanyunsuanfu.jpg]]
*** 大尺寸运算符
[[./img/dachicunyunsuanfu.jpg]]
*** 箭头
[[./img/jiantou.jpg]]
*** 定界符
[[./img/dingjiefu.jpg]]
*** 大尺寸定界符
[[./img/dachicundingjiefu.jpg]]
*** 其他符号
[[./img/qitafuhao.jpg]]
*** 非数学符号
[[./img/feishuxuefuhao.jpg]]
*** AMS定界符
[[./img/amsdingjiefu.jpg]]
*** AMS希腊和希伯来字母
[[./img/amsxilahexibolaizimu.jpg]]
*** AMS二元关系符
[[./img/amseryuanguanxifu.jpg]]
*** AMS箭头
[[./img/amsjiantou.jpg]]
*** AMS二元否定关系符和箭头
[[./img/amseryuanfoudingguanxifuhejiantou.jpg]]
*** AMS二元运算符
[[./img/amseryuanyunsuanfu.jpg]]
*** AMS其他符号
[[./img/amsqitafuhao.jpg]]
*** 微积分符号
1. \(\int_{0}^{n}\)
2. \(\sum_{i=0}^{n}\)
3. \(\sum\limits_{i=0}^{n}\)
4. \(\mathrm{d}x\)
* keil
- 设置emacs编辑器：在Customer Tools Menu菜单中，Command设置emacs路径，在Argument中!E代表编辑当前文件；在Menu Content中新
  建个命令emacs(&E), 括号里面的代表快捷键.
* iar
- 设置emacs编辑器：在Configure Tool中Menu Content中新建个命令emacs(&E), 括号里面的代表快捷键，在Command中设置emacs路径，
  在Argument中 \$FILE_PATH\$ 代表编辑当前文件.  
* git
** account
- key:
  + generate private key and public key,keys place into dir "~/.ssh/";
    #+BEGIN_SRC shell
      ssh-keygen -t rsa -C "your_email@163.com" 
    #+END_SRC
  + upload public key to github setting;
  + test connection
    #+BEGIN_SRC shell
      ssh -T git@github.com
    #+END_SRC
** local repository creation
- git init: repository initialize
- git add test.txt testdir: add files or dir
- git commit -m "log": commit with log message
- git push -u origin master
** role
interaction flow is like figure [[imggititactf]].
#+BEGIN_SRC plantuml :exports results :file ./img/cmdflow.png
  actor "WORK" as W
  entity "STAGE(INDEX)" as S
  database "MASTER(HEAD)" as M

  W -> S: git add <file>
  S -> M: git commit -m "message"
  S -> M: git commit --allow-empty -m "message"
  W -> M: git commit -a -m "message"
  W -> S: git diff
  W -> M: git diff HEAD(or MASTER)
  S -> M: git diff - -cached(or - -staged)
  S <- M: git reset HEAD(or ID)
  S <- M: git reset --hard HEAD(or ID)^
  W <- M: git reset --hard HEAD(or ID)^
  S <->S: git reset -<file>
  S -> S: git rm --cached <file>
  W <- S: git checkout
  W <- S: git checkout - <file>
  W <- M: git checkout HEAD(or <file>)
  S <- M: git checkout HEAD(or <file>)
  M <-> M: git ls-tree -l HEAD
  S <-> S: git ls-files -s
  W <-> W: git clean -fd
#+END_SRC
#+CAPTION: Git Interaction Flow
#+NAME: imggititactf
#+attr_latex: :placement [H] :width 0.6\textwidth
#+results:
[[file:./img/cmdflow.png]]

** command
- config
  + git config --global user.name "bitman":提交记录会用到
  + git config --global user.email bitsman@163.com:提交记录会用到
  + git config --unset --global user.name: 删除username
  + git config --unset --global user.email: 删除useremail
  + git config user.name: 查看user name
  + git config user.email: 查看user email
  + git --exec-path: 展示git安装位置
- status
  + git status: 显示完整信息；
  + git status -s: 显示简略信息
- directory
  + git rev-parse --git-dir: 显示版本库.git目录所在的位置。
  + git rev-parse --show-toplevel: 显示工作区根目录。
  + git rev-parse --show-prefix: 相对于工作区根目录的相对目录。
  + git rev-parse --show-cdup: 显示从当前目录（cd）后退（up）到工作区的根的深度。
  + git rev-parse --symbolic --tags: 显示所有tag
  + git rev-parse HEAD: 显示head对应的sha1；  
- alias
  + git config --global alias.st status
  + git config --global alias.cm "commit -m"
  + git config --global alias.co checkout
  + git config --global alias.br branch
- commit
  + git commit --allow-empty -m "my message": 允许不修改文件做提交
  + git commit -a -m "message": 工作区直接提交到版本库, 绕过stage区；
  + git commit --amend -m "message": 修改最近的提交说明；
- diff
  + git diff: 工作区和stage区的文件做对比；
  + git diff head（或master）: 工作区中的文件和版本库(HEAD)的文件做对比；
  + git diff --cached（或--staged）: 版本库中的文件和stage区的文件做对比；
  + git diff tagA tagB:比较里程碑A和B；
  + git diff tagA：工作区和里程碑A比较；
  + git diff --cached tagA: 比较stage区和里程碑A；
  + git diff ID1 ID2 -- <file>:比较记录ID1和ID2下文件file的区别；
- log
  + git log：完整log信息
  + git log --oneline：简略log信息
  + git log --oneline --decorate：简略log信息加tag信息branch信息
  + git log --graph --oneline:字符图显示分之log
  + git log --stat -2：最近2次的log记录；
- show
  + git show tagname --stat:显示里程碑tagname及其提交；
  + git show ID1:README > README.OLD:检出某文件的历史版本到其他文件名
- reset:一般修改分支游标(master等)
  + git reset HEAD(可不加): 用版本库的复位stage的文件，工作区不受影响；
  + git reset --hard head(or ID)^: 回退到父版，工作区和stage区修改全部丢失；
  + git reset -<file>: git add <file>反向操作；
- rm
  + git rm --cached <file> :从stage区删除file文件，工作区不受影响；
  + git add -u:将工作区删除的文件，标记到stage区，做同一删除
- add
  + git add -A :工作区中所有改动以及新增文件添加到暂存区
- checkout:一般修改HEAD
  + git checkout HEAD(可不加): 汇总显示工作区、暂存区与HEAD的差异。
  + git checkout .:用stage区复位工作区的文件，会清除工作区的改动；
  + git checkout - .:用stage区复位工作区的文件，会清除工作区的改动；
  + git checkout - <file>: 用stage区的file文件复位工作区的file文件
  + git checkout HEAD .:用版本库的复位stage和工作区的文件；
  + git checkout HEAD <file>: 用版本库的复位stage和工作区的file文件；
  + git checkout <branch>: 检出branch分支。更新HEAD以指向branch分支，以
    branch指向的树更新暂存区和工作区。
  + git checkout branch - filename: 维持HEAD的指向不变。将branch所指向
    的提交中的filename替换暂存区和工作区中相应的文件。注意会将暂存区和
    工作区中的filename文件直接覆盖。
  + git checkout -b <new_branch> [<commit>]:基于提交commit创建分支
    new_branch并切换到new_branch分支上；
- ls
  + git ls-tree -l HEAD: 显示版本库中的文件树；
  + git ls-files -s: 显示stage区的文件树；
- clean
  + git clean -fd:清除工作区中未加入版本库的文件和目录    
- branch
  + git branch: 显示本地分支列表，带星号的是当前分支；
  + git branch <branchname>：创建分支（基于HEAD）；
  + git branch <branchname> <commit>：创建分支（基于commit）；
  + git branch -d <branchname>：删除分支，删除前检查是否已合并到其他分
    支，否则拒绝删除；
  + git branch -D <branchname>：强制删除分支；
  + git branch -m <oldbranch> <newbranch>：重命名分支，如果版本库中存
    在newbranch，则拒绝重命名；
  + git branch -M <oldbranch> <newbranch>：强制重命名分支；
- stash
  + git stash:缓存工作区和stage区，再刷新工作区和stage区到之前的一致态
  + git stash list: 列出缓存的列表；
  + git stash pop: 弹出最新的stash缓存
  + git stash apply:类似pop，但不删除缓存；
  + git stash drop: 删除一个缓存
  + git stash clear：删除所有缓存；
  + git stash branch：基于进度创建分之；
- reflog
  + git reflog: 
- tag
  + git tag -m "message" tagname:打tag, 名字叫tagname
  + git tag -a <tagname> [<commit>]：类似-m参数
  + git tag <tagname> [<commit>]: 对提交commit建立tag为tagname；
  + git tag -s <tagname> [<commit>]：创建带GPG签名的里程碑
  + git tag -u <key-id> <tagname> [<commit>]：创建带GPG签名的里程碑，-u参数选择指定的私钥进行签名。
  + git tag -d <tagname>：删除tag；
  + git tag: 显示当前版本库的里程碑列表;
  + git tag -n<number>: 显示当前版本库的里程碑列表number条；
  + git tag -l v2*： 通配符只显示v2版本的子版本；
- describe
  + git describe: 将提交显示为一个易记的名称；
  + git describe <commit>: 将提交commit显示为一个易记的名称；
- archive
  + git archive -o latest.zip HEAD:基于最新提交建立归档文件latest.zip
  + git archive -o partial.tar  HEAD src doc:只将目录src和doc建到归档中
  + git archive --format=tar --prefix=1.0/ v1.0 | gzip >foo-1.0.tar.gz:
    基于里程碑v1.0建立归档，并且为归档中文件添加目录前缀1.0 
- blame:
  + git blame <file>: 逐行显示，在每行行首显示此行最早是在什么版本引入，
    由谁引入
- clone:
  + git clone dir1 dir2: 将本地版本库dir1备份克隆到本地dir2；
- pull
  + git pull：在本地备份版本库中获取源库的更新，git pull=git fetch+git merge
- push
  + git push origin mytag：将本地里程碑mytag推送到远程origin；
  + git push origin refs/tags/*：将本地所有里程碑推送到远程origin；
  + git push origin:<tagname>: 删除远程origin的里程碑tagname
- fetch
  + git fetch: 拉取
- remote
  + git remote -v: 显示已经注册的远程版本库
  + git remote set-url origin file:///path/to/repos/xxx.git: 修改远程版本地址
  + git remote set-url --push origin /path/to/repos/xxx.git: 只修改push地址
  + git remote rename new-remote user2：将远程版本库new-remote名称修改为user2
  + git remote update： 获得所有远程版本的更新；
  + git remote rm user2：删除远程版本库；
- merge
  + git merge origin/master: 合并origin的master到本地master
  + git merge <branchname>：将分支branchname合并到当前分支（master）
- patch
  + git format-patch -s HEAD~3..HEAD：将最近三个提交转换为补丁文件；
- gitk
  + gitk --all：图形界面显示所有log日志
