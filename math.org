#+title: 数学 
#+author: 比克曼
#+latex_class: org-latex-pdf 
#+latex: \newpage 

* 代数
** 概念
- 自然数：natural number，{0，1，2，3...}等全体非负整数组成的数的集合称为自然数；
- 正整数：positive integer，{1，2，3...}等向前扩充的数称为正整数；
- 负整数：{1，2，3...}等向后扩充的数称为妇整数；
- 中性数：0被称为中性数；
- 整数： integer，把正整数、负整数、中性数(0)合在一起叫整数，对＋、－、×运算组成一个封闭的数域集合；
- 有理数：rational number，整数对÷不封闭，有理数则在整数基础上对÷封闭的数域，或者可以表示成两个整数之比;
- 无理数：irrational number，不能表示成2个整数之比的数，比如\(\sqrt{2}\)和圆周率；
- 实数：real number，有理数和无理数合到一起称为实数；
- 虚数：imaginary number，符号用i表示，i = \(\sqrt{-1}\)；
- 复数：complex number，由实数和虚数构造出的数叫复数；
- 向量：vector； 
- 矩阵：matrix；
- 张量：tensor；
- 群：group；
- 环：loop；
- 域：field；
- 线性代数：研究未知数更多的一次方程组，引进矩阵、向量、空间等概念形成的方向；
- 多项式代数：研究未知数次数更高的高次方程，形成的方向；
  #+caption: 数的归纳
  #+label: img-number
  #+attr_latex: placement=[H] scale=0.3
  #+begin_src ditaa :file ./img/img-number.png :cmdline -S -E
                                                                                                  +--positive integer
                                                                                                  |
                                                                     +--positive rational number--+
                                                                     |                            |
                                                 +--rational number--+--0                         +--positive fraction
                                                 |                   |                          +--native integer
                                 +--real number--+                   +--native rational number--+
                                 |               |                                              |
                                 |               +--irrational number                           +--native fraction
                                 |
                                 |
          +--generalized number--+
          |                      |
          |                      +--complex number(a+bi)
  number--+
          |                 +--vector
          |                 |
          +--narrow number--+--matrix
                            |
                            +--other(tensor,group,loop,field)
  #+end_src
** 多项式
*** 概念
- 最大公因式：设f(x), g(x)是P[x]中两个多项式。P[x]中多项式d(x)称为f(x), g(x)的一个最大公因式，如果它满足
  1. d(x)是f(x)，g(x)的公因式；
  2. f(x)，g(x) 的公因式全是d(x)的因式；
- 多项式互素：P[x]中两个多项式f(x)，g(x)称为互素(互质)，如果(f(x), g(x))=1;  ((f(x), g(x))表示首项系数是1的最大公因式)；
- 重因式：不可约多项式p(x)称为多项式f(x)的k重因式，如果\(p^{k}x | f(x)\)，而\(p^{k+1}x ! f(x)\); (g(x)|f(x)表示g(x)能整
  除f(x)) ; 
- 多项式微商: 对多项式求导；
- 本原多项式：如果一个非零的整系数多项式\(g(x)=b_{n}x^{n}+b_{n-1}x^{n-1}+……+b_{0}\) 的系数\(b_{n}, b_{n-1}, ……，b_{0}\)
  没有异于±1的公因子，也就说它们是互素的，这个多项式被称为本原多项式；
- 本原多项式定理(高斯引理)：两个本原多项式的乘积还是本原多项式；
- 对称多项式：设\(f(x_{1}, x_{2}, ……, x_{n})\)是数环R上一个n元多项式，如果对于这n个文字\(x_{1}, x_{2}, ……, x_{n}\)的
  指标集{1, 2, ……, n}施行任意置换后，\(f(x_{1}, x_{2}, ……, x_{n})\)都不改变，那么就称\(f(x_{1}, x_{2}, ……, x_{n})\)
  是R上一个n元对称多项式；
*** 满足定律
- 加法交换律, f(x)+g(x)=g(x)+f(x)；
- 加法结合律, (f(x)+g(x))+h(x) = f(x)+(g(x)+h(x)); 
- 乘法交换律, f(x)g(x)=g(x)f(x); 
- 乘法结合律, (f(x)g(x))h(x)=f(x)(g(x)h(x)); 
- 乘法对加法的分配律, f(x)(g(x)+h(x))=f(x)g(x)+f(x)h(x); 
- 乘法消去律, f(x)g(x)=f(x)h(x)且f(x) \(\neq\) 0, 那么g(x)=h(x);
- 任何n(n>0)次多项式在复数域中有n个根(重根按重数计算)
*** 公式
- 多项式乘法，f(x)g(x) = \(\sum_{i=0}^{n}a_{i}x^{i}\) \(\sum_{j=0}^{m}b_{j}x^{j}\) = \(\sum\limits_{s=0}^{m+n}(\sum\limits_{i+j}a_{i}b_{j})x^{s}\)
- 多项式微商：
  1. (f(x)+g(x))' = f'(x) + g'(x);
  2. (cf(x))' = cf'(x);
  3. (f(x)g(x))' = f'(x)g(x) + f(x)g'(x);
  4. \((f^{m}(x))' = mf^{m-1}(x)f'(x)\)
  
*** 应用
***** 多项式拟合
- 概念：根据给定的m个点，并不要求这条曲线经过这些点，而是y=f(x)的近似曲线y=\(\Phi(x)\)；
* 概率
** 概念
- 样本空间：随机试验的所有可能结果组成的集合;
- 随机变量：打靶打入XY坐标系，打入的位置是个二维随机变量(x, y), 随机变量不是一个概率;随机变量分为：
  1. 离散随机变量：只能取有限个值，虽然可以是无穷多的，但是是离散化的；
  2. 连续型随机变量：可以取无穷多的连续值；
- 概率函数：对于随机变量X的概率叫概率函数: $$ p_{i} = P(X = a_{i}), i = 1,...,n $$ 
- 概率分布：概率函数给出了全部概率1是如何在其可能值之间分配的,  _其实可以将概率分布和概率函数等同认识_ ；
- 分布函数： _可以认为是概率函数在区间段的求和_ , 设X为一随机变量，则分布函数为 $$P(X \leq x) = F(x), -\infty < x < \infty$$   
- 概率密度函数：如果对于随机变量X的分布函数F(x),存在非负可积函数f(x)，使对于任意实数x有 
  $$F(x) = \int_{\infty}^{x}f(t)dt $$ 则f(x)称为X的概率密度函数，简称概率密度, 只有在x点处连续，才有f(x)=F'(x)； 
- 等可能概型中事件A的计算公式： $$P(A) = \sum_{j=1}^{k}P({e_{i_{j}}})=\frac{k}{n}=\frac{A包含的基本事件数}{S中基本事件的总数} $$
- 条件概率：事件A已经发生的条件下，事件B发生的概率，表示为$$P(B|A)=\frac{P(AB)}{P(A)}$$
- 互斥时间和的概率：等于各事件概率的和： $P(A_{1}+A_{2}+...+A_{n}) = P(A_{1})+P(A_{2})+...+P(A_{n})$
- 对立事件A的概率：$P(\overline{A}) = 1 - P(A)$
- 独立事件的概率：若干个独立事件 $A_{1},...,A_{n}$ 之积的概率，等于各事件概率的乘积：$P(A_{1}...A_{n}) = P(A_{1})...P(A_{n})$
- 全概率：其意义在于在校复杂的情况下直接计算A事件概率P(A)不容易，但是A事件总是随某个B_i发生，则适当去构造这组B_i可以简化
  计算。其公式如下，其中用到了条件概率公式, 此公式还能从另一个角度去理解，把B_i看做导致事件A发生的一种可能途径，对不同途
  径，A发生的概率即条件概率P(A|B)各不同，而采取哪个途径却是随机的。 
  $$ P(A)=P(AB_{1})+...+P(AB_{n}) = P(B_{1})P(A|B_{1})+...+P(B_{n})P(A|B_{n}) $$
- 贝叶斯公式：刻画了一些事件B_i其原有发生概率在事件A引入的条件下B_i的概率发生了改变；如果把事件A看成结果，把诸事件B_i看
  成导致结果A的可能原因，则全概率公式可以看做为“由原因推结果”，而贝叶斯公式则相反为“由结果推原因”，现在有结果A已经发
  生了，在众多原因B_i中到底由哪个导致，贝叶斯公式可以给出度量，类似于发生了某个案件A，在不了解案情前，嫌疑人B_i根据以往
  的记录其作案的概率为P(B_i)，但是如果了解了A案情，则P(B_i)就会变动了；贝叶斯公式如下：在全概率假定下有   
  $$P(B|A) = \frac{P(AB_{i})}{P(A)} = \frac{P(B_{i})P(A|B_{i})}{\sum_{j}P(B_{j})P(A|B_{j})}$$
- 

** 排列组合
- 排列：n个相异事物取r个(1<=r<=n)的不同排列总数，为$P_{r}^{n} = n(n-1)(n-2)...(n-r+1)$ , 如果r=n，则$P_{r}^{r} = r!$
- 组合：n个相异物件取r个(1<=r<=n)的不同组合总数，为$C_{r}^{n}=\frac{P_{r}^{n}}{r!}=\frac{n!}{r!(n-r)!}}$
- 0!=1; 
* 概率分布
** 离散分布
*** 01分布
随机变量X只能取0和1两个值，取0和1的概率分布是p，q，p+q=1
*** 二项分布
- 定义：服从二项分布的随机变量X表示在n个独立的是/非试验中成功的次数i，其中每次试验的成功概率为p
  $$ p_{i} = C_{n}^{i}p^{i}(1-p)^{n-i},i=0, 1, ..., n $$
**** python实现
#+begin_src python
from scipy import stats         #倒入工具包
import numpy as np
import matplotlib.pyplot as plt
# ...........................
n = 20                          #定义试验次数
p = 0.3                         #定义每次事件的概率
k = np.arange(21)               #模拟多次试验，事件发生的所有次数
binomial = stats.binom.pmf(k, n, p) #计算每个次数的概率
# ...........................
plt.plot(k, binomial, 'o-')     #将每个次数的概率通过图形表示出来
plt.title('binomial:n=%i, p=%.2f' %(n,p)) #设置标题
plt.xlabel('k times')           #x轴是次数
plt.ylabel('probability of k')  #y轴是k次的概率
plt.show()                      #显示出来
#+end_src

*** 伯努利分布
*** 泊松分布
*** 几何分布
** 连续分布
*** 正太分布
*** 指数分布
*** \beta分布
  

